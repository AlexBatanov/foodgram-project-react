version: '3.7'
services:

  db:
    image: postgres:13.0-alpine
    # environment:
    #   POSTGRES_USER: myuser
    #   POSTGRES_PASSWORD: password
    #   POSTGRES_DB: food
    ports:
      - "5432:5432"
    volumes:
      - db_value:/var/lib/postgresql/data/
    env_file:
      - ./.env
  
  backend:
      # image: andyplo/foodgram_backend:v.21.12.22
      build:
        context: ../backend
        dockerfile: Dockerfile
      # command: bash -c "usermod -aG docker $USER && python manage.py runserver 0.0.0.0:8000"
      restart: always
      volumes:
        - static_value:/app/static/
        - media_value:/app/media/
      depends_on:
        - db
      env_file:
        - ./.env

  frontend:
    build:
        context: ../frontend
        dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - frontend
    restart: always

volumes:
  db_value:
  static_value:
  media_value: